<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-07-26T12:02:04-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Rckwzrd’s Reference</title><subtitle>Matt Rhoads |</subtitle><entry><title type="html">Parsing Apple Workout Data</title><link href="http://localhost:4000/2022/07/26/parsing-apple-workout-data.html" rel="alternate" type="text/html" title="Parsing Apple Workout Data" /><published>2022-07-26T00:00:00-05:00</published><updated>2022-07-26T00:00:00-05:00</updated><id>http://localhost:4000/2022/07/26/parsing-apple-workout-data</id><content type="html" xml:base="http://localhost:4000/2022/07/26/parsing-apple-workout-data.html"><![CDATA[<p>Apple provides easy access to personal workout data. The challenge is parsing the blob of data.</p>

<p><strong>Below is a protocol for extracting heart rate time series data.</strong></p>

<p>Tools:</p>

<ul>
  <li><a href="https://gist.github.com/hoffa/936db2bb85e134709cd263dd358ca309">original idea</a></li>
  <li><a href="https://docs.python.org/3/library/json.html?highlight=json#module-json">python json module</a></li>
  <li><a href="https://docs.python.org/3/library/xml.etree.elementtree.html">python xml api</a></li>
  <li><a href="https://stedolan.github.io/jq/">jq json processor</a></li>
</ul>

<h2 id="data-retrieval">Data retrieval</h2>

<ol>
  <li>Go to health app on iphone</li>
  <li>Tap profile icon and scroll to bottom</li>
  <li>Select “export all health data” option</li>
  <li>Push <code class="language-plaintext highlighter-rouge">export.zip</code> to cloud storage</li>
  <li>Retrieve and extract archive on local machine</li>
</ol>

<p>Note: Export process may take several minutes. Archive could be 10s of MB.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>unzip export.zip -d /path/to/dir
</code></pre></div></div>

<h2 id="data-format">Data format</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># file structure
</code></pre></div></div>

<p>Explain contents of each file. Note which file has hear rate data.</p>

<h2 id="convert-xml-to-json-with-python">Convert xml to json with python</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import json
import sys
from xml.etree.ElementTree import iterparse

for _, elem in iterparse(sys.argv[1]):
    if elem.tag == "Record":
        if elem.attrib["type"] == "HKQuantityTypeIdentifierHeartRate":
            print(json.dumps(elem.attrib))
</code></pre></div></div>

<p>Explain that data is in xml. Need to use <code class="language-plaintext highlighter-rouge">parse.py</code> to find records with heart rate data.</p>

<h2 id="stream-json-to-csv-with-jq">Stream json to csv with jq</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 parse.py data/export.xml | \
jq -r '[.endDate, .type, .unit, .value] | @csv' \
&gt; data/heart_rate.csv
</code></pre></div></div>

<p>Explain that <code class="language-plaintext highlighter-rouge">parse.py</code> combined with <code class="language-plaintext highlighter-rouge">jq</code> will stream heart time series data into a csv file.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Apple provides easy access to personal workout data. The challenge is parsing the blob of data. Below is a protocol for extracting heart rate time series data. Tools: original idea python json module python xml api jq json processor Data retrieval Go to health app on iphone Tap profile icon and scroll to bottom Select “export all health data” option Push export.zip to cloud storage Retrieve and extract archive on local machine Note: Export process may take several minutes. Archive could be 10s of MB. unzip export.zip -d /path/to/dir Data format # file structure Explain contents of each file. Note which file has hear rate data. Convert xml to json with python import json import sys from xml.etree.ElementTree import iterparse for _, elem in iterparse(sys.argv[1]): if elem.tag == "Record": if elem.attrib["type"] == "HKQuantityTypeIdentifierHeartRate": print(json.dumps(elem.attrib)) Explain that data is in xml. Need to use parse.py to find records with heart rate data. Stream json to csv with jq python3 parse.py data/export.xml | \ jq -r '[.endDate, .type, .unit, .value] | @csv' \ &gt; data/heart_rate.csv Explain that parse.py combined with jq will stream heart time series data into a csv file.]]></summary></entry><entry><title type="html">Vpc Fundamentals</title><link href="http://localhost:4000/2022/07/21/vpc-fundamentals.html" rel="alternate" type="text/html" title="Vpc Fundamentals" /><published>2022-07-21T00:00:00-05:00</published><updated>2022-07-21T00:00:00-05:00</updated><id>http://localhost:4000/2022/07/21/vpc-fundamentals</id><content type="html" xml:base="http://localhost:4000/2022/07/21/vpc-fundamentals.html"><![CDATA[<p>Notes on the AWS Virtual Private Cloud (VPC) service.</p>

<p>Fundamental features and links to related topics.</p>

<p>Links:</p>

<ul>
  <li><a href="https://docs.aws.amazon.com/vpc/?id=docs_gateway">AWS VPC docs</a></li>
  <li><a href="https://en.wikipedia.org/wiki/Internet_protocol_suite">Internet protocol suite</a></li>
  <li><a href="https://en.wikipedia.org/wiki/Cloud_computing">Cloud computing</a></li>
  <li><a href="https://en.wikipedia.org/wiki/IPv4">IPv4</a></li>
  <li><a href="https://en.wikipedia.org/wiki/IPv6">IPv6</a></li>
  <li><a href="https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">CIDR</a></li>
</ul>

<h2 id="vpc-overview">VPC overview</h2>

<p>Networks defined in aws cloud</p>

<ul>
  <li>isolated software defined networking</li>
  <li>custom IPv4/v6 address range</li>
  <li>multiple subnets</li>
  <li>routing table configuration</li>
  <li>network address translation (NAT gateway)</li>
  <li>created with console, CLI, or IaC</li>
  <li>security and firewalls</li>
</ul>

<p>Security groups</p>

<ul>
  <li>associated with EC2, allow rules</li>
  <li>stateful</li>
</ul>

<p>Network ACLs</p>

<ul>
  <li>associated with VPCs/subnets</li>
  <li>allow and deny rules</li>
  <li>stateless</li>
</ul>

<h2 id="vpc-deployment-options">VPC deployment options</h2>

<p>Plan cloud network</p>

<ul>
  <li>number and location of networks/subnets</li>
  <li>traffic control in and out
    <ul>
      <li>remote ssh for admin</li>
      <li>public web app in subnet port 80/443</li>
    </ul>
  </li>
  <li>IPv4 address ranges
    <ul>
      <li>CIDR notation /16 /24</li>
    </ul>
  </li>
  <li>network isolation/connectivity
    <ul>
      <li>test vpc sandbox</li>
    </ul>
  </li>
  <li>resources in network
    <ul>
      <li>subnet for public front end</li>
      <li>subnet for private back end database</li>
    </ul>
  </li>
</ul>

<p>VPC Deployment Options</p>

<ul>
  <li>VPC with a single public subnet</li>
  <li>VPC with public and private subnets</li>
  <li>VPC with public and private subnets and hardware VPN</li>
  <li>VPC with private subnet and hardware vpn</li>
</ul>

<p>VPC with a single public subnet</p>

<ul>
  <li>create one subnet and internet gateway</li>
  <li>subnet resources are open to the internet
    <ul>
      <li>elastic and public IPs</li>
    </ul>
  </li>
  <li>control traffic with ACLs and security groups</li>
</ul>

<p>VPC with public and private subnets</p>

<ul>
  <li>one public and one private subnet</li>
  <li>used for multi tier applicatoins
    <ul>
      <li>public subnet for front end</li>
      <li>private subnet for back end</li>
    </ul>
  </li>
  <li>private resources do not have direct outbound internet access
    <ul>
      <li>NAT in public subnet for indirect</li>
    </ul>
  </li>
</ul>

<p>VPC with public and private subnets and hardware VPN</p>

<ul>
  <li>VPN links on premise network to aws
    <ul>
      <li>IPsec VPN tunnel</li>
      <li>aws manages cloud side vpn configuration</li>
      <li>user must configure on premise vpn</li>
    </ul>
  </li>
  <li>on premise traffic to aws elastic Ip
    <ul>
      <li>traverse internet, not VPN</li>
    </ul>
  </li>
  <li>aws private subnet traffic
    <ul>
      <li>routed to on premise network via VPN</li>
    </ul>
  </li>
</ul>

<p>VPC with private subnet and hardware vpn</p>

<ul>
  <li>no internet gateway
    <ul>
      <li>no internet connectivity</li>
    </ul>
  </li>
  <li>extend on premise network into aws</li>
  <li>vpn links on premise network to cloud
    <ul>
      <li>IPsec vpn tunnel</li>
      <li>manage vpn on both ends</li>
    </ul>
  </li>
</ul>

<h2 id="vpc-networking-components">VPC networking components</h2>

<p>VPCs will contain a set of components</p>

<ul>
  <li>subnets</li>
  <li>route tables</li>
  <li>network interfaces</li>
  <li>elastic IP address</li>
  <li>NAT and internet gateways</li>
</ul>

<p>Subnets</p>

<ul>
  <li>contained with vpc</li>
  <li>created within an AZ</li>
  <li>ip address range falls within vpc range
    <ul>
      <li>auto assign ipv4 public ip</li>
    </ul>
  </li>
  <li>ec2 instances deployed into subnets</li>
  <li>associated with network ACLs
    <ul>
      <li>allow/deny inbound/outbound network traffic flow</li>
    </ul>
  </li>
  <li>associated with route tables</li>
</ul>

<p>Route tables</p>

<ul>
  <li>routing control</li>
  <li>internet gateways
    <ul>
      <li>0.0.0.0/0 default route</li>
    </ul>
  </li>
  <li>virtual firewall appliances</li>
  <li>on premise networks through vpn or direct connect</li>
  <li>vpc peering
    <ul>
      <li>private traffic between vpcs</li>
    </ul>
  </li>
</ul>

<p>Network interfaces</p>

<ul>
  <li>elastic network interface
    <ul>
      <li>attached / detached from instances</li>
    </ul>
  </li>
  <li>subnet set at create time</li>
  <li>auto mac address</li>
  <li>ip addressing
    <ul>
      <li>ipv4 or ipv6</li>
      <li>static or dynamic assignment</li>
    </ul>
  </li>
  <li>security groups associated with interface</li>
</ul>

<p>Elastic ip address</p>

<ul>
  <li>static ipv4 address</li>
  <li>linked to aws account</li>
  <li>associated with
    <ul>
      <li>ec2 instance</li>
      <li>network interface</li>
    </ul>
  </li>
  <li>release ip if not needed
    <ul>
      <li>cost $ to use</li>
    </ul>
  </li>
</ul>

<p>Gateways</p>

<ul>
  <li>Network address translation (NAT)
    <ul>
      <li>allow internet connectivity from private subnet</li>
      <li>connections from internet not allowed</li>
      <li>only responses from internet allowed</li>
      <li>modify subnet route tables to use NAT</li>
    </ul>
  </li>
  <li>Internet gateway
    <ul>
      <li>provides subnet access to internet</li>
      <li>connections from internet allowed</li>
      <li>modify subnet route tables to use internet</li>
    </ul>
  </li>
</ul>

<h2 id="ip-addressing-and-subnets">IP addressing and subnets</h2>

<p>Plan out ip addressing prior to vpc and resource deployment.</p>

<ul>
  <li>CIDR notation</li>
  <li>ip address visibility
    <ul>
      <li>public, reachable from internet</li>
      <li>private, used within vpcs</li>
    </ul>
  </li>
  <li>aws supports ipv4 and ipv6</li>
  <li>ip addresses
    <ul>
      <li>associated with network interfaces</li>
      <li>statically or dynamically assigned</li>
    </ul>
  </li>
  <li>ec2 instances recieve an internal dns hostname
    <ul>
      <li>example: ip-10-23-55-1.ec2.internal</li>
      <li>resolvable only within vpc sunet</li>
    </ul>
  </li>
  <li>new ec2 instances
    <ul>
      <li>receive a private ip from subnet is occupies</li>
      <li>address constant between reboots</li>
      <li>address released when instance is terminated</li>
    </ul>
  </li>
  <li>auto assign public ip option</li>
</ul>

<h2 id="create-a-vpc">Create a VPC</h2>

<p>Create vpc through aws console</p>

<ul>
  <li>configuration wizard</li>
  <li>old console style</li>
  <li>ip cidr range and block</li>
  <li>route table and dns</li>
  <li>acl and security group</li>
  <li>subnets</li>
</ul>

<h2 id="automate-deployment-of-infrastructure">Automate deployment of infrastructure</h2>

<p>Deployment tools</p>

<ul>
  <li>powershell (lol)</li>
  <li>aws cli</li>
  <li>api, boto3</li>
  <li>cloud formation IaC</li>
  <li>aws elastic beanstalk and ops works</li>
</ul>

<p>Cloudformation IaC</p>

<ul>
  <li>template file
    <ul>
      <li>json with passed parameters</li>
      <li>custom or preconfigured</li>
    </ul>
  </li>
  <li>related resources deployed quickly</li>
</ul>

<p>Beanstalk</p>

<ul>
  <li>application infrastructure orchestration service</li>
  <li>do not provision individual resources</li>
  <li>upload applications in different languages</li>
</ul>

<p>OpsWorks</p>

<ul>
  <li>centralized application cofiguration managment
    <ul>
      <li>chef and puppet</li>
    </ul>
  </li>
  <li>no manual ec2 configuration</li>
  <li>automate instance
    <ul>
      <li>deployment, configuration, and management</li>
    </ul>
  </li>
  <li>applications consist of
    <ul>
      <li>stacks, resources</li>
      <li>layers, configuration</li>
    </ul>
  </li>
</ul>

<h2 id="security-groups-and-network-acls">Security groups and network ACLs</h2>

<p>Security group</p>

<ul>
  <li>stateful firewall
    <ul>
      <li>supports allow rules</li>
      <li>tracks state of connection</li>
    </ul>
  </li>
  <li>associated with network interfaces
    <ul>
      <li>attached to ec2</li>
    </ul>
  </li>
  <li>consists of acl allow rules
    <ul>
      <li>similiar to a traditional firewall</li>
    </ul>
  </li>
  <li>determine how many security groups
    <ul>
      <li>firewall pools</li>
      <li>one group can be associated withn many interfaces</li>
    </ul>
  </li>
  <li>consistent naming and taging
    <ul>
      <li>track security</li>
    </ul>
  </li>
</ul>

<p>Network ACLs</p>

<ul>
  <li>associated with vpc subnets</li>
  <li>support both allow and deny rules</li>
  <li>stateless firewall
    <ul>
      <li>return traffic is not allowed automatically</li>
    </ul>
  </li>
</ul>

<h2 id="implement-security-groups">Implement security groups</h2>

<ul>
  <li>ec2 console</li>
  <li>network and security</li>
  <li>security groups</li>
  <li>give name, description, vpc, rules, tags</li>
  <li>type, protocol, port, source</li>
  <li>statefull firewall
    <ul>
      <li>do not have to define inbound and outbound rules</li>
    </ul>
  </li>
</ul>

<h2 id="create-internet-gateway">Create internet gateway</h2>

<ul>
  <li>allow access to internet for vpc deployed resources</li>
  <li>vpc dashboard</li>
  <li>subnets</li>
  <li>internet gateway
    <ul>
      <li>state: attached, detached</li>
    </ul>
  </li>
  <li>route table
    <ul>
      <li>connect internet gateway to subnet</li>
    </ul>
  </li>
</ul>

<h2 id="implement-network-acls">Implement network ACLs</h2>

<ul>
  <li>perimeter in and out bound traffic control</li>
  <li>vpc dashboard</li>
  <li>security</li>
  <li>network ACLs</li>
  <li>name and vpc</li>
  <li>default deny all in and out bound</li>
  <li>edit vpc nacl association</li>
</ul>

<h2 id="vpc-connectivity-options">VPC connectivity options</h2>

<p>VPC peering</p>

<ul>
  <li>connectivity between vpc</li>
  <li>different regions and accounts</li>
  <li>no vpn</li>
  <li>ec2 in different vpc communicate</li>
  <li>single vpc peered with multiple vps
    <ul>
      <li>no transitive peering</li>
    </ul>
  </li>
</ul>]]></content><author><name></name></author><summary type="html"><![CDATA[Notes on the AWS Virtual Private Cloud (VPC) service. Fundamental features and links to related topics. Links: AWS VPC docs Internet protocol suite Cloud computing IPv4 IPv6 CIDR VPC overview Networks defined in aws cloud isolated software defined networking custom IPv4/v6 address range multiple subnets routing table configuration network address translation (NAT gateway) created with console, CLI, or IaC security and firewalls Security groups associated with EC2, allow rules stateful Network ACLs associated with VPCs/subnets allow and deny rules stateless VPC deployment options Plan cloud network number and location of networks/subnets traffic control in and out remote ssh for admin public web app in subnet port 80/443 IPv4 address ranges CIDR notation /16 /24 network isolation/connectivity test vpc sandbox resources in network subnet for public front end subnet for private back end database VPC Deployment Options VPC with a single public subnet VPC with public and private subnets VPC with public and private subnets and hardware VPN VPC with private subnet and hardware vpn VPC with a single public subnet create one subnet and internet gateway subnet resources are open to the internet elastic and public IPs control traffic with ACLs and security groups VPC with public and private subnets one public and one private subnet used for multi tier applicatoins public subnet for front end private subnet for back end private resources do not have direct outbound internet access NAT in public subnet for indirect VPC with public and private subnets and hardware VPN VPN links on premise network to aws IPsec VPN tunnel aws manages cloud side vpn configuration user must configure on premise vpn on premise traffic to aws elastic Ip traverse internet, not VPN aws private subnet traffic routed to on premise network via VPN VPC with private subnet and hardware vpn no internet gateway no internet connectivity extend on premise network into aws vpn links on premise network to cloud IPsec vpn tunnel manage vpn on both ends VPC networking components VPCs will contain a set of components subnets route tables network interfaces elastic IP address NAT and internet gateways Subnets contained with vpc created within an AZ ip address range falls within vpc range auto assign ipv4 public ip ec2 instances deployed into subnets associated with network ACLs allow/deny inbound/outbound network traffic flow associated with route tables Route tables routing control internet gateways 0.0.0.0/0 default route virtual firewall appliances on premise networks through vpn or direct connect vpc peering private traffic between vpcs Network interfaces elastic network interface attached / detached from instances subnet set at create time auto mac address ip addressing ipv4 or ipv6 static or dynamic assignment security groups associated with interface Elastic ip address static ipv4 address linked to aws account associated with ec2 instance network interface release ip if not needed cost $ to use Gateways Network address translation (NAT) allow internet connectivity from private subnet connections from internet not allowed only responses from internet allowed modify subnet route tables to use NAT Internet gateway provides subnet access to internet connections from internet allowed modify subnet route tables to use internet IP addressing and subnets Plan out ip addressing prior to vpc and resource deployment. CIDR notation ip address visibility public, reachable from internet private, used within vpcs aws supports ipv4 and ipv6 ip addresses associated with network interfaces statically or dynamically assigned ec2 instances recieve an internal dns hostname example: ip-10-23-55-1.ec2.internal resolvable only within vpc sunet new ec2 instances receive a private ip from subnet is occupies address constant between reboots address released when instance is terminated auto assign public ip option Create a VPC Create vpc through aws console configuration wizard old console style ip cidr range and block route table and dns acl and security group subnets Automate deployment of infrastructure Deployment tools powershell (lol) aws cli api, boto3 cloud formation IaC aws elastic beanstalk and ops works Cloudformation IaC template file json with passed parameters custom or preconfigured related resources deployed quickly Beanstalk application infrastructure orchestration service do not provision individual resources upload applications in different languages OpsWorks centralized application cofiguration managment chef and puppet no manual ec2 configuration automate instance deployment, configuration, and management applications consist of stacks, resources layers, configuration Security groups and network ACLs Security group stateful firewall supports allow rules tracks state of connection associated with network interfaces attached to ec2 consists of acl allow rules similiar to a traditional firewall determine how many security groups firewall pools one group can be associated withn many interfaces consistent naming and taging track security Network ACLs associated with vpc subnets support both allow and deny rules stateless firewall return traffic is not allowed automatically Implement security groups ec2 console network and security security groups give name, description, vpc, rules, tags type, protocol, port, source statefull firewall do not have to define inbound and outbound rules Create internet gateway allow access to internet for vpc deployed resources vpc dashboard subnets internet gateway state: attached, detached route table connect internet gateway to subnet Implement network ACLs perimeter in and out bound traffic control vpc dashboard security network ACLs name and vpc default deny all in and out bound edit vpc nacl association VPC connectivity options VPC peering connectivity between vpc different regions and accounts no vpn ec2 in different vpc communicate single vpc peered with multiple vps no transitive peering]]></summary></entry><entry><title type="html">5 Rules For White Belts</title><link href="http://localhost:4000/2022/07/19/5-Rules-For-White-Belts.html" rel="alternate" type="text/html" title="5 Rules For White Belts" /><published>2022-07-19T00:00:00-05:00</published><updated>2022-07-19T00:00:00-05:00</updated><id>http://localhost:4000/2022/07/19/5-Rules-For-White-Belts</id><content type="html" xml:base="http://localhost:4000/2022/07/19/5-Rules-For-White-Belts.html"><![CDATA[<p>The book <a href="https://www.goodreads.com/en/book/show/38841408-5-rules-for-white-belts">5 Rules for White Belts</a> provides a useful conceptual framework for learning Jiu Jitsu.</p>

<p>Below are notes on the practice and philosophy of the system.</p>

<h2 id="rule-1-you-are-a-work-in-progress">Rule 1: You are a Work In Progress</h2>

<p>Be ok with getting crushed. Failure can be used.</p>

<p>Every session has a choice:</p>

<ol>
  <li>Way of comfort</li>
  <li>Way of growth</li>
</ol>

<p>The choices exist in tension. Comfort provides success and feeds the ego. Growth risks failure but allows for new skills to develop.</p>

<p>Failure must be embraced and risks taken in order to advance. Seek out purposeful failure while training in order to grow.</p>

<h2 id="rule-2-narrow-the-immediate-focus">Rule 2: Narrow the immediate focus</h2>

<p>Focus on the four basic positions of Jiu Jitsu:</p>

<ol>
  <li>guard</li>
  <li>side control</li>
  <li>mount</li>
  <li>back</li>
</ol>

<p>These positions exist in a ladder of dominance:</p>

<ul>
  <li>you have partners back</li>
  <li>you are on top in mount</li>
  <li>you are on top in side control</li>
  <li>you are on top in guard</li>
  <li>you are on bottom in guard</li>
  <li>your partner has side control</li>
  <li>your partner has the mount</li>
  <li>your partner has your back</li>
</ul>

<p>The goal is to ascend and increase control over the other player. The upper half is offensive and the lower half is defensive.</p>

<p>Techniques are the tools used to ascend:</p>

<ul>
  <li>reversals</li>
  <li>guard recoveries</li>
  <li>sweeps</li>
  <li>guard Passes</li>
</ul>

<p>The novice’s goal is to learn how to efficiently use tools to navigate the ladder.</p>

<h2 id="rule-3-learn-how-to-learn">Rule 3: Learn how to learn</h2>

<p>Mat time is finite. Time must be used efficiently to develop skill.</p>

<p>Questions must be asked in order to understand techniques:</p>

<ul>
  <li>what is this?</li>
  <li>how is it done?</li>
  <li>why does it work?</li>
</ul>

<p>If what, how, and why can be articulated for a technique the principle is understood.</p>

<p>Keep a notebook and log training after each session. Review the notes between sessions.</p>

<p>Do not expect the instructor to provide all goals and guidance.</p>

<h2 id="rule-4-be-greatful-for-your-teammates">Rule 4: Be greatful for your teammates</h2>

<p>Jiu Jitsu cannot be practiced alone. The academy is a place for fellowship.</p>

<p>The Jiu Jitsu add:</p>

<blockquote>
  <p>Come work really hard at something incredibly difficult, where grown humans try to choke you. If like being sore, having injuries, and struggling come play Jiu Jitsu.</p>
</blockquote>

<p>Training partners are the obstacles used to develop skill. It is a reciprocral process and growth is not a competition.</p>

<h2 id="rule-5-jiu-jitsu-is-a-vehicle-for-something-more">Rule 5: Jiu Jitsu is a vehicle for something more</h2>

<p>Life is finite and Jiu Jitsu is not a sport to be won. It is a medium for personal development.</p>

<p>Use Jiu Jitsu as a support for the rest of life. Not as a distraction from reality.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[The book 5 Rules for White Belts provides a useful conceptual framework for learning Jiu Jitsu. Below are notes on the practice and philosophy of the system. Rule 1: You are a Work In Progress Be ok with getting crushed. Failure can be used. Every session has a choice: Way of comfort Way of growth The choices exist in tension. Comfort provides success and feeds the ego. Growth risks failure but allows for new skills to develop. Failure must be embraced and risks taken in order to advance. Seek out purposeful failure while training in order to grow. Rule 2: Narrow the immediate focus Focus on the four basic positions of Jiu Jitsu: guard side control mount back These positions exist in a ladder of dominance: you have partners back you are on top in mount you are on top in side control you are on top in guard you are on bottom in guard your partner has side control your partner has the mount your partner has your back The goal is to ascend and increase control over the other player. The upper half is offensive and the lower half is defensive. Techniques are the tools used to ascend: reversals guard recoveries sweeps guard Passes The novice’s goal is to learn how to efficiently use tools to navigate the ladder. Rule 3: Learn how to learn Mat time is finite. Time must be used efficiently to develop skill. Questions must be asked in order to understand techniques: what is this? how is it done? why does it work? If what, how, and why can be articulated for a technique the principle is understood. Keep a notebook and log training after each session. Review the notes between sessions. Do not expect the instructor to provide all goals and guidance. Rule 4: Be greatful for your teammates Jiu Jitsu cannot be practiced alone. The academy is a place for fellowship. The Jiu Jitsu add: Come work really hard at something incredibly difficult, where grown humans try to choke you. If like being sore, having injuries, and struggling come play Jiu Jitsu. Training partners are the obstacles used to develop skill. It is a reciprocral process and growth is not a competition. Rule 5: Jiu Jitsu is a vehicle for something more Life is finite and Jiu Jitsu is not a sport to be won. It is a medium for personal development. Use Jiu Jitsu as a support for the rest of life. Not as a distraction from reality.]]></summary></entry><entry><title type="html">Basic Networking</title><link href="http://localhost:4000/2022/07/14/basic-networking.html" rel="alternate" type="text/html" title="Basic Networking" /><published>2022-07-14T00:00:00-05:00</published><updated>2022-07-14T00:00:00-05:00</updated><id>http://localhost:4000/2022/07/14/basic-networking</id><content type="html" xml:base="http://localhost:4000/2022/07/14/basic-networking.html"><![CDATA[<p>Notes on networking. The absolute basics.</p>

<!--more-->

<p>Based on CompTIA A+ 220-100.</p>

<p><a href="https://en.wikipedia.org/wiki/OSI_model">Wikipedia OSI Model</a></p>

<h2 id="hubs-and-bridges">Hubs and Bridges</h2>

<p>Hubs and bridges are less common these days due to low cost of higher level devices.</p>

<p>Hubs connect computers.</p>

<p>Bridges connect networks segments and nodes.</p>

<p>Hubs</p>

<ul>
  <li>OSI level 1 (physcial level)
    <ul>
      <li>no logic or software</li>
    </ul>
  </li>
  <li>simple device to connect computers</li>
  <li>recieved signals copied to all other ports
    <ul>
      <li>creates noise</li>
    </ul>
  </li>
  <li>active
    <ul>
      <li>signal boosting and repeating</li>
      <li>extend length of network</li>
    </ul>
  </li>
  <li>passive
    <ul>
      <li>no boosting or extension</li>
    </ul>
  </li>
</ul>

<p>Bridges</p>

<ul>
  <li>OSI layer 2 (physcial address aware)
    <ul>
      <li>mac address is the physical hardware address</li>
      <li>logic to bridge traffic between nodes with mac</li>
    </ul>
  </li>
  <li>bridge functions
    <ul>
      <li>join similiar network topologies</li>
      <li>divide network into segments or nodes</li>
      <li>isolate network traffic between nodes</li>
    </ul>
  </li>
  <li>bridges forward broadcast packets
    <ul>
      <li>broadcasts addressed to all computers</li>
    </ul>
  </li>
  <li>cannot perform intelligent network path selection
    <ul>
      <li>route between sender and destination is constant</li>
    </ul>
  </li>
</ul>

<h2 id="switches">Switches</h2>

<p>Switches connect computers. It overtook the hub.</p>

<ul>
  <li>OSI layer 2 (physical address aware)
    <ul>
      <li>use mac to determine where to send data</li>
    </ul>
  </li>
  <li>provides central connectivity between computers</li>
  <li>examine layer 2 header (mac) for info</li>
  <li>uses info to forward packets to correct port
    <ul>
      <li>reduce noise and improves performance</li>
      <li>builds mac address table</li>
      <li>filters traffic</li>
    </ul>
  </li>
  <li>advantage
    <ul>
      <li>increase network bandwidth, security, and performance</li>
      <li>regulates flow of traffic and reduces packet collissions</li>
      <li>mac address are known for all hardware</li>
    </ul>
  </li>
  <li>disadvantage
    <ul>
      <li>difficuly to troubleshoot</li>
      <li>devices can be spoofed</li>
      <li>needs proper design and config</li>
    </ul>
  </li>
  <li>managed (intelligent switch)
    <ul>
      <li>configure over IP with software and dedicated port</li>
    </ul>
  </li>
  <li>unmanaged (plug and play)
    <ul>
      <li>no configuration control</li>
      <li>cost efficient for small deployments</li>
    </ul>
  </li>
</ul>

<h2 id="routers">Routers</h2>

<p>Routers connect networks. It overtook the bridge.</p>

<p>Intelligent devices that find the best path for transmitting data between networks using IP addresses. Routers are required to connect seperate WANs and LANs.</p>

<ul>
  <li>OSI layter 3 (networks)
    <ul>
      <li>IP address</li>
      <li>LAN, WAN, copper, and fiber</li>
      <li>route table programming</li>
    </ul>
  </li>
  <li>routing tables store network addresses
    <ul>
      <li>initial routes</li>
      <li>routing tables can be shared between routers</li>
    </ul>
  </li>
  <li>transmit accross and connect multiple networks
    <ul>
      <li>subnets in a large network</li>
    </ul>
  </li>
  <li>does not forward broadcasts
    <ul>
      <li>isolated broadcast domains</li>
    </ul>
  </li>
  <li>determine best route accross known routes
    <ul>
      <li>consider distance and congestion</li>
    </ul>
  </li>
</ul>

<h2 id="access-points-repeaters-and-extenders">Access Points, Repeaters, and Extenders</h2>

<ul>
  <li>access point
    <ul>
      <li>any point that enables access to network</li>
      <li>“wireless access point”</li>
      <li>“ethernet port in a wall outlet”</li>
    </ul>
  </li>
  <li>repeaters and extender
    <ul>
      <li>operate at layer 1</li>
      <li>improve signal range</li>
      <li>extend wifi network</li>
    </ul>
  </li>
</ul>

<h2 id="network-controllers">Network Controllers</h2>

<p>Network interface cards are used to connect hardware to a switch or network.</p>

<ul>
  <li>network devices require interface
    <ul>
      <li>wireless or wired</li>
    </ul>
  </li>
  <li>can be hardwired or modular</li>
  <li>speed and duplex
    <ul>
      <li>set with auto negotiate</li>
    </ul>
  </li>
  <li>wake on LAN
    <ul>
      <li>turn on hardware with network message</li>
    </ul>
  </li>
</ul>

<h2 id="cable-and-dsl-modems">Cable and DSL Modems</h2>

<p>Hardware devices used to connect to a remote netowrk or internet.</p>

<p>Signal is transmitted in an analog or digital form over long distances. Contraction of modulate and demodulate.</p>

<ul>
  <li>send and recieve data
    <ul>
      <li>telephone and cable lines</li>
    </ul>
  </li>
  <li>dial-up modem
    <ul>
      <li>dial into ISP via telephone</li>
      <li>slow speed 56kbs</li>
    </ul>
  </li>
  <li>digital subscriber line (DSL)
    <ul>
      <li>transfer digital signal over standard telephone</li>
      <li>use DSL modem to connect to ISP</li>
    </ul>
  </li>
  <li>cable modem
    <ul>
      <li>coax tv lines to connect to ISP</li>
      <li>always on and fast data transfer</li>
    </ul>
  </li>
</ul>

<h2 id="patch-panels">Patch Panels</h2>

<p>Structured cabling, patch panels, and network racks.</p>

<ul>
  <li>structured cabling
    <ul>
      <li>bundling and organizing cables</li>
      <li>safety and aesthetics</li>
    </ul>
  </li>
  <li>patch panel
    <ul>
      <li>hardware assembly with many ports</li>
      <li>manages connections to LAN</li>
      <li>types based on ports and cable specs</li>
    </ul>
  </li>
  <li>network racks
    <ul>
      <li>chassis holding patch panels, switches and router</li>
    </ul>
  </li>
</ul>

<h2 id="power-over-ethernet">Power over Ethernet</h2>

<p>Used ethernet cable to carry electrical power. Can place a LAN in area that does not have power.</p>

<ul>
  <li>common for wireless access points</li>
  <li>IEEE 802.3bt next gen POE
    <ul>
      <li>cameras</li>
      <li>LED</li>
      <li>terminals</li>
    </ul>
  </li>
</ul>

<h2 id="ethernet-over-power">Ethernet over Power</h2>

<p>Transmit data using common electrical wiring.</p>

<p>Ideal when it is not possible to run cables or extend WIFI.</p>

<ul>
  <li>requires outlet and adapter</li>
</ul>

<h2 id="firewalls">Firewalls</h2>

<p>Allow or deny conenctions to a network based on a set of rules.</p>

<ul>
  <li>allow or deny connection with rules</li>
  <li>rules are based on IP addresses and ports</li>
  <li>stateful filters maintain session state info</li>
  <li>protect against outside threats</li>
  <li>hardware
    <ul>
      <li>placed between LAN and internet</li>
      <li>port and IP rules</li>
      <li>act as content filter, VPN concentrator, honeypot</li>
    </ul>
  </li>
  <li>software
    <ul>
      <li>runs on host as an app</li>
      <li>control internet access over ports</li>
      <li>is host is compromised so is the firewall</li>
    </ul>
  </li>
  <li>content filters
    <ul>
      <li>component of a firewall</li>
      <li>analyze packets and allow/deny with rules</li>
      <li>common filters include executable, emails, websites</li>
    </ul>
  </li>
</ul>

<h2 id="cloud-network-controllers">Cloud Network Controllers</h2>

<p>Component that controls the flow of traffic from access points through networks. The network controller configures and manages all access points.</p>

<ul>
  <li>on premise or cloud controler backhaul
    <ul>
      <li>communinication is tunneled back to controller</li>
      <li>control plane contains instructions and rules</li>
      <li>data plane is acutal traffic</li>
    </ul>
  </li>
  <li>cloud managed wireless LAN
    <ul>
      <li>virtual controller</li>
      <li>located in public cloud</li>
      <li>connects remote LANS</li>
      <li>controller software and traffic accessed over the web</li>
    </ul>
  </li>
</ul>]]></content><author><name></name></author><summary type="html"><![CDATA[Notes on networking. The absolute basics.]]></summary></entry></feed>